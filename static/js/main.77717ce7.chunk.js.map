{"version":3,"sources":["components/Ranking.js","actions/Ranking.js","containers/Ranking.js","containers/Nav.js","components/Nav.js","App.js","reducers/shopping.js","reducers/Ranking.js","index.js","createStore.js"],"names":["Ranking","this","props","onMount","categoryId","nextProps","onUpdate","category","ranking","error","name","map","item","alt","src","imageUrl","href","url","target","code","React","Component","defaultProps","startRequest","type","payload","receiveData","response","finishRequest","fetchRanking","dispatch","getState","a","categories","shopping","find","id","replace","queryString","qs","stringify","appid","category_id","fetchJsonp","responce","json","data","connect","state","ownProps","actions","to","Link","App","className","Switch","Route","path","component","render","Redirect","match","params","initialState","actionState","getRanking","itemLength","ResultSet","totalResultsReturned","index","Result","push","Code","Name","Url","Image","Medium","undefined","action","history","createHashHistory","store","reduxCreateStore","combineReducers","reducers","router","routerReducer","applyMiddleware","logger","thunk","routerMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.77717ce7.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import Card, {CardMedia, CardContent, CardActions} from 'material-ui/Card';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default class Ranking extends React.Component {\r\n    componentWillMount() {\r\n        this.props.onMount(this.props.categoryId);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.categoryId !== nextProps.categoryId) {\r\n            this.props.onUpdate(nextProps.categoryId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {category, ranking, error} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <h2>{\r\n                    typeof category !== 'undefined'\r\n                        ? `${category.name}のランキング`\r\n                        : ''    \r\n                }</h2>\r\n\r\n                {(() => {\r\n                    if (error) {\r\n                        return <p>エラーが発生しました。リロードしてください。</p>;\r\n                    } else if (typeof ranking === 'undefined') {\r\n                        return <p>読み込み中...</p>\r\n                    } else {\r\n                        return (\r\n                            <ol>\r\n                                {ranking.map(item => (\r\n                                    <li key={`ranking-item-${item.code}`}>\r\n                                        <img alt={item.name} src={item.imageUrl} />\r\n                                        <a href={item.url} target=\"_blank\">{item.name}</a>\r\n                                    </li>\r\n                                ))}\r\n                            </ol>\r\n                        );\r\n                    }\r\n                })()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRanking.propTypes = {\r\n    categoryId: PropTypes.string.isRequired,\r\n    onMount: PropTypes.func.isRequired,\r\n    onUpdate: PropTypes.func.isRequired,\r\n\r\n    category: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n    }),\r\n    ranking: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            code: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            url: PropTypes.string.isRequired,\r\n            imageUrl: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    error: PropTypes.bool.isRequired\r\n};\r\nRanking.defaultProps = {\r\n    // FYI: categoryId=1は総合ランキング\r\n    categoryId: '1'\r\n};\r\n","import fetchJsonp from 'fetch-jsonp';\r\nimport qs from 'qs';\r\nimport {replace} from 'react-router-redux';\r\n\r\nconst API_URL = 'https://shopping.yahooapis.jp/ShoppingWebService/V1/json/categoryRanking';\r\n\r\nconst APP_ID = 'dj00aiZpPU1RemlpVUxGdTZweiZzPWNvbnN1bWVyc2VjcmV0Jng9OGE-';\r\n\r\n// リクエスト開始\r\nconst startRequest = category => ({\r\n    type: 'START_REQUEST',\r\n    payload: {category},\r\n});\r\n\r\n// レスポンス受信\r\nconst receiveData = (category, error, response) => ({\r\n    type: 'RECEIVE_DATA',\r\n    payload: {category, error, response},\r\n});\r\n\r\n// リクエスト完了\r\nconst finishRequest = category => ({\r\n    type: 'FINISH_REQUEST',\r\n    payload: {category},\r\n});\r\n\r\n// ランキングを取得する\r\nexport const fetchRanking = categoryId => {\r\n    // redux-thunkを使った非同期処理\r\n    return async (dispatch, getState) => {\r\n        const categories = getState().shopping.categories;\r\n        const category = categories.find(category => (category.id === categoryId));\r\n        if (typeof category === 'undefined') {\r\n            dispatch(replace('/'));\r\n            return;\r\n        }\r\n\r\n        dispatch(startRequest(category));\r\n\r\n        const queryString = qs.stringify({\r\n            appid: APP_ID,\r\n            category_id: categoryId\r\n        });\r\n\r\n        try {\r\n            const responce = await fetchJsonp(`${API_URL}?${queryString}`);\r\n            const data = await responce.json();\r\n            dispatch(receiveData(category, null, data));\r\n        } catch (err) {\r\n            dispatch(receiveData(category, err));\r\n        }\r\n        dispatch(finishRequest(category));\r\n    };\r\n};\r\n","import {connect} from 'react-redux';\r\nimport Ranking from '../components/Ranking';\r\nimport * as actions from '../actions/Ranking';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    categoryId: ownProps.categoryId,\r\n    category: state.Ranking.category,\r\n    ranking: state.Ranking.ranking,\r\n    error: state.Ranking.error,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    // onMount と onUpdate を fetchRanking を接続\r\n    onMount (categoryId) {\r\n        dispatch(actions.fetchRanking(categoryId));\r\n    },\r\n    onUpdate (categoryId) {\r\n        dispatch(actions.fetchRanking(categoryId));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ranking);\r\n","import {connect} from 'react-redux';\r\nimport Nav from '../components/Nav';\r\n\r\nconst mapStateToProps = state => ({\r\n    categories: state.shopping.categories\r\n});\r\n\r\nexport default connect(mapStateToProps)(Nav);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Nav({categories}) {\r\n    // FYI: 遷移先のパスの生成\r\n    // カテゴリIDが1の場合は /all\r\n    // それ以外は /category/{カテゴリID}\r\n    const to = category => (\r\n        category.id === '1'\r\n            ? '/all'\r\n            : `category/${category.id}`\r\n    );\r\n\r\n    return (\r\n        <ul>\r\n            {categories.map(category => (\r\n                <li key={`nav-item-${category.id}`}>\r\n                    <Link to={to(category)}>\r\n                        {category.name}\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\nNav.propTypes = {\r\n    // state.shopping.categories の構造\r\n    categories: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired\r\n        })\r\n    ).isRequired,\r\n};","import React, {Component} from 'react';\nimport {Route, Redirect, Switch} from 'react-router-dom';\nimport Ranking from './containers/Ranking';\nimport Nav from './containers/Nav';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Nav />\n\n        <Switch>\n          <Route path=\"/all\" component={Ranking} />\n          <Route \n            path=\"/category/1\"\n            render={() => <Redirect to=\"/all\" />}\n          />\n          <Route  path=\"/category/:id\"\n          render={\n            ({match}) => <Ranking categoryId={match.params.id} />\n          }\n        />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\r\n    categories: [\r\n        {\r\n            id: '1',\r\n            name: 'すべてのカテゴリ'\r\n        },\r\n        {\r\n            id: '2502',\r\n            name: 'パソコン、周辺機器'\r\n        },\r\n        {\r\n            id: '10002',\r\n            name: '本、雑誌、コミック'\r\n        }\r\n    ]\r\n};\r\n\r\nconst actionState = () => initialState;\r\n\r\nexport default actionState;\r\n","\r\nconst getRanking = response => {\r\n    const ranking = [];\r\n    const itemLength = response.ResultSet.totalResultsReturned\r\n    for (let index = 0; index < itemLength; index++) {\r\n        const item = response.ResultSet['0'].Result[index + ''];\r\n        ranking.push({\r\n            code: item.Code,\r\n            name: item.Name,\r\n            url: item.Url,\r\n            imageUrl: item.Image.Medium\r\n        })\r\n    }\r\n    return ranking;\r\n};\r\n\r\nconst initialState = {\r\n    category:  undefined,\r\n    ranking: undefined,\r\n    error: false\r\n};\r\n\r\nconst actionState = (state  = initialState, action) => {\r\n    switch (action.type) {\r\n        // リクエスト開始時に状態をリセット\r\n        case 'START_REQUEST':\r\n            return {\r\n                category: action.payload.category,\r\n                ranking: undefined,\r\n                error: false\r\n            };\r\n        \r\n        // データ受信\r\n        case 'RECEIVE_DATA':\r\n            return action.payload.error\r\n                ? {...state, error: true}\r\n                : {\r\n                    ...state,\r\n                    ranking: getRanking(action.payload.response)\r\n                };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default actionState;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport {Provider} from 'react-redux';\nimport {ConnectedRouter} from 'react-router-redux';\nimport {createHashHistory} from 'history';\nimport App from './App';\nimport createStore from './createStore';\n// import reportWebVitals from './reportWebVitals';\n\n// historyのインスタンスを生成\nconst history = createHashHistory();\n\n// Storeの生成\nconst store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","import {\r\n    createStore as reduxCreateStore,\r\n    combineReducers,\r\n    applyMiddleware,\r\n} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport {routerReducer, routerMiddleware} from 'react-router-redux';\r\n\r\nimport * as reducers from './reducers';\r\n\r\n// historyはsrc/index.jsから渡すようにする\r\nexport default function createStore(history) {\r\n    return reduxCreateStore(\r\n        combineReducers({\r\n            ...reducers,\r\n            // react-router-reduxのReducer\r\n            router: routerReducer,\r\n        }),\r\n        applyMiddleware(\r\n            logger,\r\n            thunk,\r\n            // react-router-reduxのRedux Middleware\r\n            routerMiddleware(history)\r\n        )\r\n    );\r\n}\r\n"],"sourceRoot":""}